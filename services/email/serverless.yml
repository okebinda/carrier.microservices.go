# Email Microservice
#  using Serverless framework

service: carrier-email
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

frameworkVersion: '2'

# enable v3 env variable handling while using v2
# @todo: remove once upgraded to v3
useDotenv: true

plugins:
  - serverless-dynamodb-local

# custom variables - you should change these to your own values
custom:
  region: ${env:REGION, "us-east-1"}
  domain: ${env:DOMAIN, "domain.com"}
  prefix: ${env:PREFIX, "aws-com-domain"}
  logLevel: ${env:LOG_LEVEL, "error"}
  logEncoding: ${env:LOG_ENCODING, "json"}
  apiKey: ${env:API_KEY, ""}
  dynamoDBEndpoint: ${env:DYNAMODB_ENDPOINT, ""}
  dynamodb:
    stages:
      - dev

provider:
  name: aws
  region: ${self:custom.region}
  runtime: go1.x
  lambdaHashingVersion: 20201221
  deploymentBucket:
    name: code.${self:custom.domain}
  
  # enable v3 API gateway naming convention
  # @todo: remove once upgraded to v3
  apiGateway:
    shouldStartNameWithService: true

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  email:
    handler: bin/email
    events:
      - httpApi:
          path: /emails
          method: get
    environment:
      LOG_LEVEL: ${self:custom.logLevel}
      LOG_ENCODING: ${self:custom.logEncoding}
      API_KEY: ${self:custom.apiKey}
      DYNAMODB_ENDPOINT: ${self:custom.dynamoDBEndpoint}
      EMAILS_TABLE: ${self:custom.prefix}-${opt:stage,'dev'}-dt-emails

resources:
  Resources:
    emailsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.prefix}-${opt:stage,'dev'}-dt-emails
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: B
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        # GlobalSecondaryIndexes:
        #   IndexName: ${self:custom.prefix}-${opt:stage,'dev'}-dt-emails-idx-incomplete
        #   KeySchema:
        #     - AttributeName: id
        #       KeyType: HASH

# https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes-general-sparse-indexes.html
